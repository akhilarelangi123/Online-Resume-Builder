[{"C:\\Users\\dell\\onlineresumebuilder\\src\\index.js":"1","C:\\Users\\dell\\onlineresumebuilder\\src\\App.js":"2","C:\\Users\\dell\\onlineresumebuilder\\src\\reportWebVitals.js":"3","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\HeaderComponent.js":"4","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\HomeComponent.js":"5","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\AdminLogin.js":"6","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FresherLogin.js":"7","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FormHeader.js":"8","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ViewForm.js":"9","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FPersonalInfo.js":"10","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ExperiencedLogin.js":"11","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ExperiencedMain.js":"12","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FresherRegister.js":"13","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\DownloadExResume.js":"14","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ExperiencedRegister.js":"15","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FreshDownload.js":"16","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\CreateExResume.js":"17","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\EditFresher.js":"18","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ForgetPassword.js":"19","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FreshNavbar.js":"20","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\LoginComponent.js":"21","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ListOfFreshers.js":"22","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\AdminMenu.js":"23","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ListOfUsers.js":"24","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ExperiencedForgotPass.js":"25","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FreshPassForgot.js":"26","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\HomeDesign.js":"27","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\Slides.js":"28","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\AHeaderComponent.js":"29","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\LogoutComponent.js":"30","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\EHeaderComponent.js":"31","C:\\Users\\dell\\onlineresumebuilder\\src\\services\\FresherService.js":"32","C:\\Users\\dell\\onlineresumebuilder\\src\\services\\ExperiencedService.js":"33","C:\\Users\\dell\\onlineresumebuilder\\src\\services\\AdminService.js":"34","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ViewExResume.js":"35","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\UpdateExResume.js":"36"},{"size":595,"mtime":1610653046000,"results":"37","hashOfConfig":"38"},{"size":3180,"mtime":1610889754000,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499117500000,"results":"40","hashOfConfig":"38"},{"size":1409,"mtime":1610839020000,"results":"41","hashOfConfig":"38"},{"size":1364,"mtime":1610840792000,"results":"42","hashOfConfig":"38"},{"size":2181,"mtime":1610832632000,"results":"43","hashOfConfig":"38"},{"size":2661,"mtime":1633963986648,"results":"44","hashOfConfig":"38"},{"size":1391,"mtime":1610702014000,"results":"45","hashOfConfig":"38"},{"size":4285,"mtime":1610924604000,"results":"46","hashOfConfig":"38"},{"size":19423,"mtime":1610772600000,"results":"47","hashOfConfig":"38"},{"size":3210,"mtime":1610890556000,"results":"48","hashOfConfig":"38"},{"size":344,"mtime":1610889774000,"results":"49","hashOfConfig":"38"},{"size":3907,"mtime":1610666998000,"results":"50","hashOfConfig":"38"},{"size":4617,"mtime":1610926448000,"results":"51","hashOfConfig":"38"},{"size":2951,"mtime":1610552240000,"results":"52","hashOfConfig":"38"},{"size":4260,"mtime":1610902818000,"results":"53","hashOfConfig":"38"},{"size":28502,"mtime":1610886932000,"results":"54","hashOfConfig":"38"},{"size":12246,"mtime":1610764764000,"results":"55","hashOfConfig":"38"},{"size":4166,"mtime":1610832752000,"results":"56","hashOfConfig":"38"},{"size":869,"mtime":1610834852000,"results":"57","hashOfConfig":"38"},{"size":4090,"mtime":1633941299536,"results":"58","hashOfConfig":"38"},{"size":2470,"mtime":1610681542000,"results":"59","hashOfConfig":"38"},{"size":1289,"mtime":1610832682000,"results":"60","hashOfConfig":"38"},{"size":2419,"mtime":1610681516000,"results":"61","hashOfConfig":"38"},{"size":2310,"mtime":1610769532000,"results":"62","hashOfConfig":"38"},{"size":2246,"mtime":1633963787370,"results":"63","hashOfConfig":"38"},{"size":3249,"mtime":1610835302000,"results":"64","hashOfConfig":"38"},{"size":2518,"mtime":1610843892000,"results":"65","hashOfConfig":"38"},{"size":1193,"mtime":1614593991016,"results":"66","hashOfConfig":"38"},{"size":479,"mtime":1610665212000,"results":"67","hashOfConfig":"38"},{"size":1950,"mtime":1610889508000,"results":"68","hashOfConfig":"38"},{"size":1112,"mtime":1633964292459,"results":"69","hashOfConfig":"38"},{"size":1065,"mtime":1633963597280,"results":"70","hashOfConfig":"38"},{"size":849,"mtime":1633603627333,"results":"71","hashOfConfig":"38"},{"size":5946,"mtime":1610885152000,"results":"72","hashOfConfig":"38"},{"size":25408,"mtime":1610886360000,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1qdd4bs",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"76"},"C:\\Users\\dell\\onlineresumebuilder\\src\\index.js",[],["168","169"],"C:\\Users\\dell\\onlineresumebuilder\\src\\App.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\reportWebVitals.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\HeaderComponent.js",["170","171"],"\r\nimport React, { useState } from \"react\";\r\nimport HomeDesign from \"./HomeDesign\";\r\n\r\n\r\n\r\nfunction HeaderComponent() {\r\n \r\n    return (\r\n        <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">RESUMEBUILDER</a>\r\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"/home\">Home</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/admin\">Admin Login</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/fresher\">Fresher Login</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/experience\">Experience Login</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n       \r\n      </nav>\r\n      <HomeDesign></HomeDesign>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\HomeComponent.js",["172"],"import React from 'react'\r\nimport Slides from './Slides'\r\n\r\nfunction HomeComponent() {\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">RESUMEBUILDER</a>\r\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"/home\">Home</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/admin\">Admin Login</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/fresher\">Fresher Login</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/experience\">Experience Login</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n       \r\n      </nav>\r\n        <Slides></Slides>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default HomeComponent","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\AdminLogin.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FresherLogin.js",["173","174","175","176","177","178","179","180"],"\r\n\r\nimport React,{Component} from 'react';\r\nimport { BrowserRouter as Router ,Switch , Route, useHistory } from 'react-router-dom'\r\n//import UserService from '../services/UserService';\r\nimport axios from 'axios';\r\nimport AdminLogin from './AdminLogin';\r\nimport FresherRegister from './FresherRegister';\r\nimport './Login.css'\r\n\r\nclass FresherLogin extends Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state={\r\n        users:[],\r\n        username:'',\r\n        password:'',\r\n        answer:''\r\n    }\r\n}\r\n\r\n    handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    \r\n    axios.get('http://localhost:8081/fresher'+ '/' + this.state.password+ '/' + this.state.username).\r\n    then((response)=>{this.setState({answer: response.data}) }\r\n    );\r\n    \r\n    if(this.state.answer==='Login Successfully'){\r\n      this.props.history.push('/view');\r\n    }\r\n    }\r\n  \r\nrender(){\r\n    return (\r\n      <div class=\"bg-img\">\r\n      \r\n      <div className = \"card-body\">\r\n       <div  box-sizing= \"border-box\">\r\n        <h2 style={{color:\"white\"}}> Login </h2>\r\n        <form method=\"POST\" onSubmit={this.handleSubmit} >\r\n        <label>\r\n        <div>\r\n        <p class=\"text-center\"><b>USERNAME</b></p>\r\n        \r\n              <input\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                className=\"form-control\"\r\n                onChange={(event)=>{this.setState({username:event.target.value})}}\r\n                Placeholder=\"username\"\r\n                \r\n               \r\n              />\r\n            </div>\r\n            <div>\r\n           \r\n            <p class=\"text-center\"><b>PASSWORD</b></p>\r\n            <input\r\n            type=\"password\"\r\n              name=\"password\"\r\n             \r\n              value={this.state.password}\r\n              className=\"form-control\"\r\n              onChange={(event)=>{this.setState({password:event.target.value})}}\r\n              Placeholder=\"password\"\r\n                \r\n             \r\n            />\r\n          </div>\r\n       \r\n      </label>\r\n      <p></p>\r\n      <p>\r\n     \r\n      <button class=\"btn btn-primary\"  hover opacity=\"1\">Log in</button>\r\n      </p>\r\n      <p style={{color:\"white\"}}>{this.state.answer}</p>\r\n       \r\n\r\n      <h4 style={{color:\"white\"}}>New User??? </h4><a class=\"white-link\" href=\"/register\"><b>Click here for Registration</b></a>\r\n\r\n     <br></br>\r\n      <br></br>\r\n      <br></br>\r\n    \r\n      <a class=\"white-link\" href=\"/freshpassforgot\"><b>Forgot password????</b></a>\r\n  \r\n    \r\n      </form>\r\n         \r\n      \r\n      \r\n        </div>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n}\r\nexport default FresherLogin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FormHeader.js",["181","182"],"\r\nimport React, { useState } from \"react\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nfunction FormHeader() {\r\n \r\nreturn (\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">RESUMEBUILDER</a>\r\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"/first\">Create Resume</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/viewresume\">View Created Resume Resume</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" href=\"/fdownload\">Download Created Resume</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" href=\"/\">Log out</a>\r\n          </li>\r\n            \r\n              \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormHeader","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ViewForm.js",["183","184","185"],"\r\nimport React from 'react';\r\n//import UserService from '../services/UserService';\r\nimport axios from 'axios';\r\nimport FormHeader from './FormHeader';\r\nimport './Login.css'\r\nclass ViewForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      message: \"\",\r\n\r\n      users: '',\r\n      fresherId: ''\r\n    }\r\n\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n\r\n    axios.get('http://localhost:8080/fresher' + '/' + this.state.fresherId).then((response) => {\r\n      console.log(response)\r\n\r\n      this.setState({ users: response.data })\r\n      this.setState({\r\n        message : \"View Successfully!!!!\"\r\n      })\r\n    }).catch((error) => {\r\n      alert(error.response.data.message);\r\n\r\n    });\r\n    console.log(this.state.message);\r\n  }\r\n  handleEdit = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push(`/edit/${this.state.users.fresherId}`);\r\n\r\n\r\n  }\r\n\r\n\r\n  handleDelete = (e) => {\r\n    e.preventDefault();\r\n    axios.delete('http://localhost:8080/fresher/deletefresher' + '/' + this.state.fresherId).then((response) => {\r\n      this.setState({ dmessage: response.data })\r\n\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"view-img\">\r\n        <div>\r\n          <FormHeader></FormHeader>\r\n          <form method=\"POST\" onSubmit={this.handleSubmit} >\r\n            <label>\r\n              <div>\r\n                <h3 class=\"text-drk\"><b>Enter Resume Id</b></h3>\r\n\r\n                <input\r\n                  name=\"fresherId\"\r\n                  value={this.state.fresherId}\r\n                  className=\"form-control\"\r\n                  onChange={(event) => { this.setState({ fresherId: event.target.value }) }}\r\n\r\n\r\n                />\r\n              </div>\r\n\r\n\r\n            </label>\r\n            <p></p>\r\n            <p>\r\n              <button class=\"btn btn-info\" hover opacity=\"1\">View Resume</button>\r\n\r\n            </p>\r\n\r\n          </form>\r\n\r\n          <h2 className=\"text.center\"></h2>\r\n          <div class=\"float-sm-left\">\r\n            <div className=\"card row-lg-12\">\r\n              <div className=\"card-body\">\r\n\r\n                <h4 class=\"text-info\"><b>PERSONAL INFO</b></h4>\r\n                <p class=\"text-dark\">NAME       :     {this.state.users.fresherName}</p>\r\n                <p class=\"text-dark\">EMAIL      :     {this.state.users.email}</p>\r\n                <p class=\"text-dark\">CONTACT NO :     {this.state.users.contactNo}</p>\r\n\r\n                <p class=\"text-dark\">ADDRESS    :      {this.state.users.address}</p>\r\n\r\n                <h4 class=\"text-info\"><b>ACADEMIC INFO</b></h4>\r\n                <p class=\"text-dark\">HSC %   : {this.state.users?.academic?.hscPercent} </p>\r\n                <p class=\"text-dark\">SSC %   : {this.state.users?.academic?.sscPercent} </p>\r\n                <p class=\"text-dark\">DEGREE   : {this.state.users?.academic?.degree} </p>\r\n                <p class=\"text-dark\">BRANCH   : {this.state.users?.academic?.branch} </p>\r\n                <p class=\"text-dark\">DEGREE %   : {this.state.users?.academic?.degreePercent} </p>\r\n                <p class=\"text-dark\">NO OF BACKLOGS   : {this.state.users?.academic?.noOfBacklogs} </p>\r\n                <p class=\"text-dark\">YEARGAP   : {this.state.users?.academic?.yeargap} </p>\r\n                <h4 class=\"text-info\"><b>HOBBIES</b></h4>\r\n                <p class=\"text-dark\">HOBBYNAME   : {this.state.users?.hobbies?.[0]?.hobbyName}</p>\r\n                <h4 class=\"text-info\"><b>PROJECTS</b></h4>\r\n                <p class=\"text-dark\">PROJECTNAME   : {this.state.users?.projects?.[0]?.projectName} </p>\r\n                <h4 class=\"text-info\"><b>TECHNICAL SKILL</b></h4>\r\n                <p class=\"text-dark\">SKILLNAME   : {this.state.users?.skills?.[0]?.skillName} </p>\r\n              </div>\r\n              <p></p>\r\n\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"float-center\">\r\n          <button id=\"update\" className=\"btn-info\" onClick={this.handleEdit}>Update this resume</button>\r\n          <p></p>\r\n          <button id=\"delete\" className=\"btn-danger\" onClick={this.handleDelete}>Delete this resume</button>\r\n          <p style={{ color: \"white\" }}>{this.state.dmessage}</p>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ViewForm\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FPersonalInfo.js",["186","187","188","189","190"],"\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport FormHeader from \"./FormHeader\";\r\nimport './Login.css'\r\n// import FormHeader from \"./FormHeader\";\r\n\r\n//import { createBrowserHistory as history} from 'history';\r\nexport class FPersonalInfo extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            answer: \"\",\r\n            fresherName: \"\",\r\n            email: \"\",\r\n            contactNo: \"\",\r\n            age: \"\",\r\n            address: \"\",\r\n            fresherNameError: \"\",\r\n            emailError: \"\",\r\n            contactNoError: \"\",\r\n            ageError: \"\",\r\n            hscPercentError: \"\",\r\n            sscPercentError: \"\",\r\n            degreeError: \"\",\r\n            branchError: \"\",\r\n            degreePercentError: \"\",\r\n            noOfBacklogsError: \"\",\r\n            yeargapError: \"\",\r\n            skills: [\r\n                {\r\n\r\n                    skillName: \"\"\r\n\r\n                }\r\n            ],\r\n\r\n            hobbies: [\r\n                {\r\n\r\n                    hobbyName: \"\"\r\n\r\n                }\r\n            ],\r\n            projects: [\r\n                {\r\n\r\n                    projectName: \"\",\r\n                    year: \"2018\"\r\n\r\n                }\r\n            ],\r\n            academic: {\r\n                hscPercent: \"\",\r\n                sscPercent: \"\",\r\n                degree: \"\",\r\n                branch: \"\",\r\n                degreePercent: \"\",\r\n                noOfBacklogs: \"\",\r\n                yeargap: \"\"\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    validate = () => {\r\n        let fresherNameError = \"\";\r\n        let emailError = \"\";\r\n        let contactNoError = \"\";\r\n        let ageError = \"\";\r\n        let hscPercentError = \"\"\r\n        let sscPercentError = \"\"\r\n        let degreeError = \"\"\r\n        let branchError = \"\"\r\n        let degreePercentError = \"\"\r\n        let noOfBacklogsError = \"\"\r\n        let yeargapError = \"\"\r\n        if (!this.state.fresherName) {\r\n            fresherNameError = \"Name cannot be blank\";\r\n        }\r\n        else if (!this.state.fresherName.match(/^[a-zA-Z\\s]+$/)) {\r\n            fresherNameError = \" Name includes only alphabets\";\r\n        }\r\n        if (!this.state.email) {\r\n            emailError = \"Email cannot be blank\";\r\n        }\r\n        else if (!this.state.email.match(\"\\\\S+?@\\\\S+?\\\\.com\")) {\r\n            emailError = \"Enter valid mailid\";\r\n        }\r\n        if (!this.state.contactNo) {\r\n            contactNoError = \"Contact Number cannot be blank \";\r\n        }\r\n        else if (!this.state.contactNo.match(\"^[6-9]\\\\d{9}$\")) {\r\n            contactNoError = \"Plz Enter valid 10 digit contact number \";\r\n        }\r\n        if (!this.state.age) {\r\n            ageError = \"Age cannot be blank\";\r\n        }\r\n        else if (!this.state.age.match(\"^[1-9]{1,2}$\")) {\r\n            ageError = \"Enter valid age\";\r\n        }\r\n        if (!this.state.academic.hscPercent) {\r\n            hscPercentError = \"Please Enter HSC percentage\"\r\n        }\r\n        else if (!this.state.academic.hscPercent.match(\"^[1-9]{2}$\")) {\r\n            hscPercentError = \"Enter HSC Percentage in 2 decimals\"\r\n        }\r\n        if (!this.state.academic.sscPercent) {\r\n            sscPercentError = \"Please Enter SSC percentage\"\r\n        }\r\n        else if (!this.state.academic.sscPercent.match(\"^[1-9]{2}$\")) {\r\n            sscPercentError = \"Enter SSC Percentage in 2 decimals\"\r\n        }\r\n        if (!this.state.academic.degree.match(/^[a-zA-Z\\s]+$/)) {\r\n            degreeError = \"Degree name must include only alphabets\"\r\n        }\r\n        if (!this.state.academic.branch.match(/^[a-zA-Z\\s]+$/)) {\r\n            branchError = \"Branch name must include only alphabets\"\r\n        }\r\n        if (!this.state.academic.degreePercent.match(\"^[1-9]{2}$\")) {\r\n            degreePercentError = \"Enter Degree Percentage in 2 decimals\"\r\n        }\r\n        if (!this.state.academic.noOfBacklogs.match(\"^[0-9]{0,2}$\")) {\r\n            noOfBacklogsError = \"Number of backlogs is invalid\"\r\n        }\r\n        if (!this.state.academic.yeargap.match(\"^[0-9]{0,1}$\")) {\r\n            yeargapError = \"Year gap is invalid\"\r\n        }\r\n        if (fresherNameError || emailError || contactNoError || ageError ||\r\n            hscPercentError || sscPercentError || degreeError || branchError || degreePercentError ||\r\n            noOfBacklogsError || yeargapError) {\r\n            this.setState({\r\n                fresherNameError, emailError, contactNoError, ageError,\r\n                hscPercentError, sscPercentError, degreeError, branchError, degreePercentError, noOfBacklogsError, yeargapError\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            alert(\"kindly note down unique resume id after save resume!!!!!\")\r\n\r\n            const URI = \"http://localhost:8080/fresher/save\";\r\n            axios.post(URI, this.state).then((response) => {\r\n                this.setState({ answer: response.data })\r\n            })\r\n                .catch((error) => console.log(error));\r\n\r\n\r\n            /* let b = {\r\n         \r\n               name: register.username,\r\n               mailid: register.mail,\r\n               password: register.password\r\n             };\r\n             console.log(b);*/\r\n\r\n        }\r\n\r\n    }\r\n    handleSkills1Change = (e) => {\r\n\r\n        // 1. Make a shallow copy of the projects\r\n        let skills = [...this.state.skills];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let skill = { ...skills[0] };\r\n        // 3. Replace the property you're intested in\r\n        skill.skillName = e.target.value;\r\n        // 4. Put it back into our array. N.B. we are mutating the array here, but that's why we made a copy first\r\n        skills[0] = skill;\r\n        // 5. Set the state to our new copy\r\n        this.setState({ skills });\r\n    }\r\n\r\n    handleProjectsChange = (e) => {\r\n        let projects = [this.state.projects];\r\n        let project = { ...projects[0] };\r\n        project.projectName = e.target.value;\r\n        projects[0] = project;\r\n        this.setState({ projects });\r\n    }\r\n    handlehobbyChange = (e) => {\r\n        let hobbies = [this.state.hobbies];\r\n        let hobby = { ...hobbies[0] };\r\n        hobby.hobbyName = e.target.value;\r\n        hobbies[0] = hobby;\r\n        this.setState({ hobbies });\r\n    }\r\n handleCancel=(e) =>{\r\n    this.props.history.push('/view');\r\n }\r\n handleReset=(e) =>{\r\n    \r\n\r\n    this.state.fresherName=\"\";\r\n    this.state.email=\"\";\r\n    this.state.contactNo=\"\";\r\n    this.state.age=\"\";\r\n    this.state.address=\"\";\r\n\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"o-img\">\r\n                <FormHeader></FormHeader>\r\n                <div className=\"card col-lg-6 offset-md-3 offset-md-3\">\r\n                    <div className=\"card-body\">\r\n\r\n\r\n                        <form method=\"POST\" onSubmit={this.handleSubmit}>\r\n\r\n                            <label>\r\n                                <h2 className=\"text-upper text-center text-dark\">PERSONAL INFORMATION</h2>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col\">\r\n\r\n                                        <p class=\"text-left\">Name</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.fresherName}\r\n                                            onChange={(e) => this.setState({ fresherName: e.target.value })}\r\n                                            class=\"form-control\"\r\n                                            Placeholder=\"enter name\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.fresherNameError}</p>\r\n                                    </div>\r\n                                    <div class=\"col\">\r\n                                        <p class=\"text-left\">Email</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.email}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ email: e.target.value })}\r\n                                            Placeholder=\"enter email\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.emailError}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col\">\r\n                                        <p class=\"text-left\">Contact No.</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.contactNo}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ contactNo: e.target.value })}\r\n                                            Placeholder=\"enter contact no\"\r\n                                        />\r\n\r\n                                        <p style={{ color: \"red\" }}>{this.state.contactNoError}</p>\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col\">\r\n                                        <p class=\"text-left\">Age</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.age}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ age: e.target.value })}\r\n                                            Placeholder=\"enter age\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.ageError}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p class=\"text-left\">Address</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.address}\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => this.setState({ address: e.target.value })}\r\n                                        Placeholder=\"enter address\"\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n                                <h2 className=\"text-upper text-center text-dark\">ACADEMIC INFORMATION</h2>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col\">\r\n\r\n                                        <p class=\"text-left\">HSC %</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.academic.hscPercent}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ academic: { ...this.state.academic, hscPercent: e.target.value } })}\r\n                                            Placeholder=\"HSC %\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.hscPercentError}</p>\r\n                                    </div>\r\n                                    <div class=\"col\">\r\n\r\n                                        <p class=\"text-left\">SSC%</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.academic.sscPercent}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ academic: { ...this.state.academic, sscPercent: e.target.value } })}\r\n                                            Placeholder=\"SSC %\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.sscPercentError}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <p></p>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col\">\r\n\r\n                                        <p class=\"text-left\">Degree</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.academic.degree}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ academic: { ...this.state.academic, degree: e.target.value } })}\r\n                                            Placeholder=\"Degree\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.degreeError}</p>\r\n                                    </div>\r\n\r\n                                    <div class=\"col\">\r\n\r\n                                        <p class=\"text-left\">Branch</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.academic.branch}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ academic: { ...this.state.academic, branch: e.target.value } })}\r\n                                            Placeholder=\"branch\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.branchError}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n\r\n                                    <p class=\"text-left\">Degree %</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.academic.degreePercent}\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => this.setState({ academic: { ...this.state.academic, degreePercent: e.target.value } })}\r\n                                        Placeholder=\"degree %\"\r\n                                    />\r\n                                    <p style={{ color: \"red\" }}>{this.state.degreePercentError}</p>\r\n                                </div>\r\n                                <div>\r\n\r\n                                    <p class=\"text-left\">No Of Backlogs</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.academic.noOfBacklogs}\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => this.setState({ academic: { ...this.state.academic, noOfBacklogs: e.target.value } })}\r\n                                        Placeholder=\"backlogs\"\r\n                                    />\r\n                                    <p style={{ color: \"red\" }}>{this.state.noOfBacklogsError}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <p class=\"text-left\">Year Gap</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.academic.yeargap}\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => this.setState({ academic: { ...this.state.academic, yeargap: e.target.value } })}\r\n                                        Placeholder=\"year\"\r\n                                    />\r\n                                    <p style={{ color: \"red\" }}>{this.state.yeargapError}</p>\r\n                                </div>\r\n                                <h2 className=\"text-upper text-center text-dark\">HOBBIES</h2>\r\n                                <div>\r\n                                    <p class=\"text-left\">Hobby</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.hobbies.hobbyName}\r\n                                        onChange={this.handlehobbyChange}\r\n                                        className=\"form-control\"\r\n                                        Placeholder=\"hobbyname\"\r\n\r\n                                    />\r\n                                </div>\r\n                                <h2 className=\"text-upper text-center text-dark\">PROJECTS</h2>\r\n                                <div>\r\n                                    <p class=\"text-left\">Project name</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.projects.projectName}\r\n                                        className=\"form-control\"\r\n                                        onChange={this.handleProjectsChange}\r\n                                        Placeholder=\"projectname\"\r\n                                    />\r\n                                </div>\r\n                                <h2 className=\"text-upper text-center text-dark\">TECHNICAL SKILLS</h2>\r\n                                <div>\r\n                                    <p class=\"text-left\">technical languages / technologies</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.skills.skillName}\r\n                                        className=\"form-control\"\r\n                                        onChange={this.handleSkills1Change}\r\n                                        Placeholder=\"skills\"\r\n                                    />\r\n                                </div>\r\n\r\n                            </label>\r\n                            <p></p>\r\n                            <div class=\"btn-group\">\r\n                            <button class=\"btn btn-primary btn-lg\">Save</button>\r\n                            <button class=\"btn btn-danger btn-lg\" onClick={this.handleCancel}>Cancel</button>\r\n                            <button class=\"btn btn-info btn-lg\" onClick={this.handleReset}>Reset</button>\r\n                            </div>\r\n                            <p style={{ color: \"green\" }}>{this.state.answer}</p>\r\n                           \r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FPersonalInfo","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ExperiencedLogin.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ExperiencedMain.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FresherRegister.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\DownloadExResume.js",["191"],"import React, { Component } from 'react'\r\nimport ExperiencedService from '../services/ExperiencedService';\r\nimport fileDownload from 'js-file-download';\r\nimport './download.css';\r\n\r\nconst INITIAL_STATE = {\r\n  resumeId: \"\",\r\n  resumeIdError : \"\",\r\n  message:\"\",\r\n  // experienced: {},\r\n  templateType: \"\",\r\n  templateTypeError: \"\"\r\n}\r\n\r\nclass DownloadExResume extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = INITIAL_STATE\r\n    \r\n        this.stopSubmission = this.stopSubmission.bind(this)\r\n        this.onTemplateTypeChange = this.onTemplateTypeChange.bind(this)\r\n      }\r\n    \r\n      onTemplateTypeChange = (e) => {\r\n        this.setState({\r\n          templateType: e.target.value\r\n        });\r\n      }\r\n    \r\n      validate = () => {\r\n        let templateTypeError = \"\"\r\n        let resumeIdError = \"\"\r\n        if(!this.state.resumeId)\r\n        {\r\n          resumeIdError = \"Resume Id cannot be blank\"\r\n        }\r\n        if (!this.state.templateType) {\r\n          templateTypeError = \"Select template type to generate the PDF\"\r\n        }\r\n    \r\n        if (templateTypeError || resumeIdError) {\r\n          this.setState({ templateTypeError,resumeIdError })\r\n          return false\r\n        }\r\n        return true\r\n      }\r\n    \r\n      stopSubmission = (e) => {\r\n        e.preventDefault()\r\n        const isValid = this.validate()\r\n        if (isValid) {\r\n          console.log(this.state)\r\n          this.setState(INITIAL_STATE)\r\n        }\r\n      }\r\n      handleDownload = (filename) => {\r\n        const isValid = this.validate()\r\n        if (isValid) {\r\n          ExperiencedService.getPdfGeneratedById(this.state.resumeId, this.state.templateType)\r\n            .then((response) => {\r\n              fileDownload(response.data, filename)\r\n            }).catch((error)=>{\r\n              alert(error.response.data.message)\r\n            })\r\n        }\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n            <div class=\"exd-img\">\r\n          <div >\r\n            <br />\r\n            <br />\r\n            <form method=\"GET\" onSubmit={this.stopSubmission}>\r\n              <div>\r\n              <h3 style={{color:\"white\"}}>Enter the id of the resume which you want to download :</h3> \r\n              <input\r\n                    placeholder=\"Enter Resume Id\"\r\n                    className=\"text-center\"\r\n                    value={this.state.resumeId}\r\n                    onChange={(e) => this.setState({ resumeId: e.target.value })}\r\n                  />\r\n              </div>\r\n              <div className=\"text-warning\">\r\n                  {this.state.resumeIdError}\r\n                </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n              <h4 style={{color:\"white\"}}>* Template Type *</h4>\r\n              <br/>\r\n              </div>\r\n              <div class=\"custom-control custom-radio custom-control-inline\">\r\n                <input type=\"radio\" id=\"customRadioInline1\" name=\"customRadioInline1\" class=\"custom-control-input\"\r\n                  value=\"LA\" checked={this.state.templateType === \"LA\"} onChange={this.onTemplateTypeChange} />\r\n                  <label class=\"custom-control-label text-primary\" for=\"customRadioInline1\"><b>Left Alignment</b></label>\r\n              </div>\r\n              <div class=\"custom-control custom-radio custom-control-inline\">\r\n                <input type=\"radio\" id=\"customRadioInline2\" name=\"customRadioInline1\" class=\"custom-control-input\"\r\n                  value=\"RA\" checked={this.state.templateType === \"RA\"} onChange={this.onTemplateTypeChange} />\r\n                <label class=\"custom-control-label text-primary\" for=\"customRadioInline2\"><b>Right Alignment</b></label>\r\n              </div>\r\n              <div class=\"custom-control custom-radio custom-control-inline\">\r\n                <input type=\"radio\" id=\"customRadioInline3\" name=\"customRadioInline1\" class=\"custom-control-input\"\r\n                  value=\"CA\" checked={this.state.templateType === \"CA\"} onChange={this.onTemplateTypeChange} />\r\n                <label class=\"custom-control-label text-primary\" for=\"customRadioInline3\"><b>Center Alignment</b></label>\r\n              </div>\r\n              <div className=\"text-warning\">\r\n                {this.state.templateTypeError}\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <button button class=\"btn btn-outline-success\" onClick={() => { this.handleDownload('resume.pdf') }}>Download Pdf</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default DownloadExResume","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ExperiencedRegister.js",["192","193"],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport ExperiencedService from '../services/ExperiencedService'\r\n\r\nfunction ExperiencedRegister() {\r\n    const [register, setRegister] = useState({\r\n        userId: \"\",\r\n        password: \"\",\r\n        userIdError: \"\",\r\n        passwordError: \"\",\r\n        answer:\"\",\r\n        isprocess:true\r\n\r\n      });\r\n\r\n     let  validate=()=>\r\n      {\r\n        let userIdError=\"\";\r\n        let passwordError=\"\";\r\n        \r\n        if(!register.userId.match(/^[a-zA-Z0-9\\s]+$/))\r\n      {\r\n        userIdError=\" Id can't be empty and can only include alphabets and numbers\";\r\n      }\r\n      if(!register.password.match(\"[A-Za-z0-9]{5,}\"))\r\n      {\r\n        passwordError=\"Password should be atleast 5 characters and alphanumeric e.g: asR34 \";\r\n      }\r\n       \r\n  \r\n        if(userIdError || passwordError)\r\n        {\r\n          setRegister({userIdError,passwordError})\r\n          return false\r\n        }\r\n        return true\r\n      }\r\n\r\n      let handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        const isValid = validate();\r\n      if(isValid)\r\n      {\r\n       \r\n    \r\n    // axios\r\n    //   .post(URI, register).then((response)=>{\r\n    //     setRegister({answer: response.data})\r\n    // })\r\n    //   .catch((error) => console.log(error));\r\n\r\n    let user={\r\n      userId:register.userId,\r\n      password:register.password\r\n    }\r\n\r\n    ExperiencedService.register(user).then((response)=>{setRegister({answer: response.data})}).\r\n    catch((error) => console.log(error))\r\n      \r\n      }\r\n     \r\n    }\r\n    \r\n    return (\r\n        <div class=\"bg-img\">\r\n        <div id=\"register\">\r\n        <h3 style={{color:\"white\"}}>REGISTRATION</h3>\r\n          <form method=\"POST\" onSubmit={handleSubmit}>\r\n          <label>\r\n          <div>\r\n          <p class=\"text-center\"><b>USERNAME</b></p>\r\n            <input\r\n              type=\"text\"\r\n              value={register.userId}\r\n              onChange={(e) => setRegister({ ...register, userId: e.target.value })}\r\n              className=\"form-control\"\r\n            />\r\n            <p style={{color:\"red\"}}>{register.userIdError}</p>\r\n          </div>\r\n          <div>\r\n          <p class=\"text-center\"><b>PASSWORD</b></p>\r\n          <input\r\n            type=\"text\"\r\n            value={register.password}\r\n            className=\"form-control\"\r\n            onChange={(e) => setRegister({ ...register, password: e.target.value })}\r\n          />\r\n                \r\n              <p style={{color:\"red\"}}>{register.passwordError}</p>\r\n            \r\n          </div>\r\n          </label>\r\n          <p><button class=\"btn btn-primary\" hover opacity=\"1\">Register</button></p>\r\n          <p style={{color:\"green\"}}>{register.answer}</p>\r\n\r\n        </form>\r\n        <p style={{color:\"blue\"}}><a class=\"nav-link\" href=\"/experience\">Click here to login</a></p>\r\n        </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ExperiencedRegister","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FreshDownload.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\CreateExResume.js",["194"],"import React, { Component } from 'react'\r\nimport ExperiencedService from '../services/ExperiencedService';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nexport class CreateExResume extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName: '',\r\n            firstNameError: '',\r\n            lastName: '',\r\n            lastNameError: '',\r\n            phone: '',\r\n            phoneError: '',\r\n            city: '',\r\n            cityError: '',\r\n            state: '',\r\n            stateError: '',\r\n            pincode: '',\r\n            pincodeError: '',\r\n            email: '',\r\n            emailError: '',\r\n            jobTitleError: '',\r\n            employerNameError: '',\r\n            wcityError: '',\r\n            wstateError: '',\r\n            fromDateError: '',\r\n            toDateError: '',\r\n            sscError: '',\r\n            hscError: '',\r\n            degreeNameError: '',\r\n            degreePercentError: '',\r\n            fieldOfStudyError: '',\r\n            startDateError: '',\r\n            endDateError: '',\r\n            projectsError: '',\r\n            skillsError: '',\r\n            workex: {\r\n                jobTitle: '',\r\n\r\n                employerName: '',\r\n\r\n                wcity: '',\r\n\r\n                wstate: '',\r\n\r\n                fromDate: '',\r\n\r\n                toDate: '',\r\n\r\n            },\r\n            education: {\r\n                ssc: '',\r\n\r\n                hsc: '',\r\n\r\n                degreeName: '',\r\n\r\n                degreePercent: '',\r\n\r\n                fieldOfStudy: '',\r\n\r\n                startDate: '',\r\n                endDate: ''\r\n            },\r\n            projects: [\r\n                {\r\n                    projects: ''\r\n                },\r\n            ],\r\n            skills: [\r\n                {\r\n                    skills: ''\r\n                },\r\n            ],\r\n            answer: \"\"\r\n\r\n        }\r\n\r\n        this.baseState = this.state\r\n\r\n        this.createResume = this.createResume.bind(this);\r\n        this.handleProjects1Change = this.handleProjects1Change.bind(this);\r\n        //this.handleProjects2Change=this.handleProjects2Change.bind(this);\r\n        this.handleSkills1Change = this.handleSkills1Change.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n        //this.handleSkills2Change=this.handleSkills2Change.bind(this);\r\n    }\r\n\r\n    createResume = (e) => {\r\n        e.preventDefault();\r\n        const isValid = this.validate()\r\n        if (isValid) {\r\n            let experienced = this.state\r\n            var id = ''\r\n            console.log('experienced => ' + JSON.stringify(experienced));\r\n            //alert(`Resume has been created with id ${experienced.id}`)    \r\n            // ExperiencedService.addExperienced(experienced).catch((error) => console.log(error)).then(res =>{\r\n            //     this.props.history.push('/viewResume')});\r\n\r\n            ExperiencedService.addExperienced(experienced).catch((error) => console.log(error)).then(response =>\r\n                this.setState({ answer: response.data }))\r\n            this.setState(this.baseState)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    handleProjects1Change = (e) => {\r\n        // 1. Make a shallow copy of the projects\r\n        let projects = [...this.state.projects];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let project = { ...projects[0] };\r\n        // 3. Replace the property you're intested in\r\n        project.projects = e.target.value;\r\n        // 4. Put it back into our array. N.B. we are mutating the array here, but that's why we made a copy first\r\n        projects[0] = project;\r\n        // 5. Set the state to our new copy\r\n        this.setState({ projects });\r\n    }\r\n\r\n\r\n\r\n    handleSkills1Change = (e) => {\r\n        // 1. Make a shallow copy of the projects\r\n        let skills = [...this.state.skills];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let skill = { ...skills[0] };\r\n        // 3. Replace the property you're intested in\r\n        skill.skills = e.target.value;\r\n        // 4. Put it back into our array. N.B. we are mutating the array here, but that's why we made a copy first\r\n        skills[0] = skill;\r\n        // 5. Set the state to our new copy\r\n        this.setState({ skills });\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/exmain')\r\n    }\r\n\r\n\r\n    validate = () => {\r\n        let firstNameError = \"\"\r\n        let lastNameError = \"\"\r\n        let phoneError = \"\"\r\n        let cityError = \"\"\r\n        let stateError = \"\"\r\n        let pincodeError = \"\"\r\n        let emailError = \"\"\r\n        let jobTitleError = \"\"\r\n        let employerNameError = \"\"\r\n        let wcityError = \"\"\r\n        let wstateError = \"\"\r\n        let fromDateError = \"\"\r\n        let toDateError = \"\"\r\n        let sscError = \"\"\r\n        let hscError = \"\"\r\n        let degreeNameError = \"\"\r\n        let fieldOfStudyError = \"\"\r\n        let degreePercentError = \"\"\r\n        let startDateError = \"\"\r\n        let endDateError = \"\"\r\n        if (!this.state.firstName) {\r\n            firstNameError = \"First name cannot be blank\"\r\n        }\r\n        else if (!this.state.firstName.match(/^[a-zA-Z]+$/)) {\r\n            firstNameError = \"First name must include only alphabets\"\r\n        }\r\n        if (!this.state.lastName) {\r\n            lastNameError = \"Last name cannot be blank\"\r\n        }\r\n        else if (!this.state.lastName.match(/^[a-zA-Z]+$/)) {\r\n            lastNameError = \"Last name must include only alphabets\"\r\n        }\r\n        if (!this.state.phone) {\r\n            phoneError = \"Mobile number cannot be blank\"\r\n        }\r\n        else if (!this.state.phone.match(\"^[6-9]\\\\d{9}$\")) {\r\n            phoneError = \"Mobile number is invalid\"\r\n        }\r\n        if (!this.state.city) {\r\n            cityError = \"City cannot be blank\"\r\n        }\r\n        else if (!this.state.city.match(/^[a-zA-Z\\s]+$/)) {\r\n            cityError = \"City must include only alphabets\"\r\n        }\r\n        if (!this.state.state) {\r\n            stateError = \"State cannot be blank\"\r\n        }\r\n        else if (!this.state.state.match(/^[a-zA-Z\\s]+$/)) {\r\n            stateError = \"State must include only alphabets\"\r\n        }\r\n        if (!this.state.pincode) {\r\n            pincodeError = \"Pincode cannot be blank\"\r\n        }\r\n        else if (!this.state.pincode.match(\"^[1-9]{1}[0-9]{2}[0-9]{3}$\")) {\r\n            pincodeError = \"Invalid pincode\"\r\n        }\r\n        if (!this.state.email) {\r\n            emailError = \"Email Id cannot be blank\"\r\n        }\r\n        else if (!this.state.email.match(\"\\\\S+?@\\\\S+?\\\\.com\")) {\r\n            emailError = \"Invalid email id\"\r\n        }\r\n        if (!this.state.workex.jobTitle) {\r\n            jobTitleError = \"Job Title cannot be blank\"\r\n        }\r\n        else if (!this.state.workex.jobTitle.match(/^[a-zA-Z\\s]+$/)) {\r\n            jobTitleError = \"Job Title must include only alphabets\"\r\n        }\r\n        if (!this.state.workex.employerName) {\r\n            employerNameError = \"Organisation name cannot be blank\"\r\n        }\r\n        else if (!this.state.workex.employerName.match(/^[a-zA-Z\\s]+$/)) {\r\n            employerNameError = \"Organisation name must include only alphabets\"\r\n        }\r\n        if (!this.state.workex.wcity) {\r\n            wcityError = \"City cannot be blank\"\r\n        }\r\n        else if (!this.state.workex.wcity.match(/^[a-zA-Z\\s]+$/)) {\r\n            wcityError = \"City must include only alphabets\"\r\n        }\r\n        if (!this.state.workex.wstate) {\r\n            wstateError = \"State cannot be blank\"\r\n        }\r\n        else if (!this.state.workex.wstate.match(/^[a-zA-Z\\s]+$/)) {\r\n            wstateError = \"State must include only alphabets\"\r\n        }\r\n        if (!this.state.workex.fromDate) {\r\n            fromDateError = \"From Date cannot be blank\"\r\n        }\r\n        else if (!this.state.workex.fromDate.match((\"^((?:19|20)\\\\d\\\\d)-(0?[1-9]|1[012])-([12][0-9]|3[01]|0?[1-9])$\"))) {\r\n            fromDateError = \"Enter date in YYYY-MM-DD format\"\r\n        }\r\n        if (!this.state.workex.toDate) {\r\n            toDateError = \"To Date cannot be blank\"\r\n        }\r\n        else if (!this.state.workex.toDate.match((\"^((?:19|20)\\\\d\\\\d)-(0?[1-9]|1[012])-([12][0-9]|3[01]|0?[1-9])$\"))) {\r\n            toDateError = \"Enter date in YYYY-MM-DD format\"\r\n        }\r\n        if (!this.state.education.ssc) {\r\n            sscError = \"Please Enter SSC percentage\"\r\n        }\r\n        else if (!this.state.education.ssc.match(\"^[1-9]{2}$\")) {\r\n            sscError = \"Enter SSC Percentage in 2 decimals\"\r\n        }\r\n        if (!this.state.education.hsc) {\r\n            hscError = \"Please Enter HSC percentage\"\r\n        }\r\n        else if (!this.state.education.hsc.match(\"^[1-9]{2}$\")) {\r\n            hscError = \"Enter HSC Percentage in 2 decimals\"\r\n        }\r\n        if (!this.state.education.degreeName) {\r\n            degreeNameError = \"Degree name cannot be blank\"\r\n        }\r\n        else if (!this.state.education.degreeName.match(/^[a-zA-Z\\s]+$/)) {\r\n            degreeNameError = \"Degree name must include only alphabets\"\r\n        }\r\n        if (!this.state.education.fieldOfStudy) {\r\n            fieldOfStudyError = \"Field of Study cannot be blank\"\r\n        }\r\n        else if (!this.state.education.fieldOfStudy.match(/^[a-zA-Z\\s]+$/)) {\r\n            fieldOfStudyError = \"State must include only alphabets\"\r\n        }\r\n        if (!this.state.education.degreePercent) {\r\n            degreePercentError = \"Please Enter Degree percentage\"\r\n        }\r\n        else if (!this.state.education.degreePercent.match(\"^[1-9]{2}$\")) {\r\n            degreePercentError = \"Enter Degree Percentage in 2 decimals\"\r\n        }\r\n        if (!this.state.education.startDate) {\r\n            startDateError = \"Start Date cannot be blank\"\r\n        }\r\n        else if (!this.state.education.startDate.match((\"^((?:19|20)\\\\d\\\\d)-(0?[1-9]|1[012])-([12][0-9]|3[01]|0?[1-9])$\"))) {\r\n            startDateError = \"Enter date in YYYY-MM-DD format\"\r\n        }\r\n        if (!this.state.education.endDate) {\r\n            endDateError = \"End Date cannot be blank\"\r\n        }\r\n        else if (!this.state.education.endDate.match((\"^((?:19|20)\\\\d\\\\d)-(0?[1-9]|1[012])-([12][0-9]|3[01]|0?[1-9])$\"))) {\r\n            endDateError = \"Enter date in YYYY-MM-DD format\"\r\n        }\r\n        if (firstNameError || lastNameError || phoneError || cityError || stateError || pincodeError || emailError\r\n            || jobTitleError || employerNameError || wcityError || wstateError || fromDateError || toDateError\r\n            || sscError || hscError || degreeNameError || fieldOfStudyError || degreePercentError || startDateError || endDateError) {\r\n            this.setState({\r\n                firstNameError, lastNameError, phoneError, cityError, stateError, pincodeError, emailError,\r\n                jobTitleError, employerNameError, wcityError, wstateError, fromDateError, toDateError,\r\n                sscError, hscError, degreeNameError, fieldOfStudyError, degreePercentError, startDateError, endDateError\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <div className=\"card-body\">\r\n                        <h2>Enter your personal details</h2>\r\n                        <form method=\"POST\" onSubmit={this.createResume}>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">First Name <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"First Name\"\r\n                                    value={this.state.firstName}\r\n                                    onChange={(e) => this.setState({ firstName: e.target.value })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">\r\n                                    {this.state.firstNameError}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Last Name <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Last Name\"\r\n                                    value={this.state.lastName}\r\n                                    onChange={(e) => this.setState({ lastName: e.target.value })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">\r\n                                    {this.state.lastNameError}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Mobile No <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"xxxxxxxxxx\"\r\n                                    value={this.state.phone}\r\n                                    onChange={(e) => this.setState({ phone: e.target.value })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.phoneError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">City <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"City Name\"\r\n                                    value={this.state.city}\r\n                                    onChange={(e) => this.setState({ city: e.target.value })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.cityError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">State Name <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"State Name\"\r\n                                    value={this.state.state}\r\n                                    onChange={(e) => this.setState({ state: e.target.value })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.stateError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Pincode <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.pincode}\r\n                                    placeholder=\"xxxxxx\"\r\n                                    onChange={(e) => this.setState({ pincode: e.target.value })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.pincodeError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Email Id <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.email}\r\n                                    placeholder=\"xxxxxx@gmail.com\"\r\n                                    onChange={(e) => this.setState({ email: e.target.value })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.emailError}</div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <div className=\"card-body\">\r\n                        <h2>Past Work Experience</h2>\r\n                        <form method=\"POST\" onSubmit={this.createResume}>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Job Title <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Job Title\"\r\n                                    value={this.state.workex.jobTitle}\r\n                                    onChange={(e) => this.setState({ workex: { ...this.state.workex, jobTitle: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.jobTitleError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Name of previous organization <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Organisation Name\"\r\n                                    value={this.state.workex.employerName}\r\n\r\n                                    onChange={(e) => this.setState({ workex: { ...this.state.workex, employerName: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.employerNameError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Previous work location city <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Work Location City\"\r\n                                    value={this.state.workex.wcity}\r\n\r\n                                    onChange={(e) => this.setState({ workex: { ...this.state.workex, wcity: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.wcityError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Previous work location State <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Work Location State\"\r\n                                    value={this.state.workex.wstate}\r\n\r\n                                    onChange={(e) => this.setState({ workex: { ...this.state.workex, wstate: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.wstateError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Starting date <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.workex.fromDate}\r\n                                    onChange={(e) => this.setState({ workex: { ...this.state.workex, fromDate: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.fromDateError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Ending date <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.workex.toDate}\r\n                                    onChange={(e) => this.setState({ workex: { ...this.state.workex, toDate: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.toDateError}</div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <div className=\"card-body\">\r\n                        <h2>Education</h2>\r\n                        <form method=\"POST\" onSubmit={this.createResume}>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">SSC % <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"xx\"\r\n                                    value={this.state.education.ssc}\r\n                                    onChange={(e) => this.setState({ education: { ...this.state.education, ssc: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.sscError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">HSC % <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"xx\"\r\n                                    value={this.state.education.hsc}\r\n                                    onChange={(e) => this.setState({ education: { ...this.state.education, hsc: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.hscError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Degree Name <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Degree Name\"\r\n                                    value={this.state.education.degreeName}\r\n                                    onChange={(e) => this.setState({ education: { ...this.state.education, degreeName: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.degreeNameError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Degree % <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"xx\"\r\n                                    value={this.state.education.degreePercent}\r\n                                    onChange={(e) => this.setState({ education: { ...this.state.education, degreePercent: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.degreePercentError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Field Of Study <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Field of Study\"\r\n                                    value={this.state.education.fieldOfStudy}\r\n                                    onChange={(e) => this.setState({ education: { ...this.state.education, fieldOfStudy: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.fieldOfStudyError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Starting date <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.education.startDate}\r\n                                    onChange={(e) => this.setState({ education: { ...this.state.education, startDate: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.startDateError}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Ending Date <label className=\"text-danger\"> * </label></p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.education.endDate}\r\n                                    onChange={(e) => this.setState({ education: { ...this.state.education, endDate: e.target.value } })}\r\n                                    className=\"form-control\" />\r\n                                <div className=\"text-danger\">{this.state.endDateError}</div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <div className=\"card-body\">\r\n                        <h2>Enter your Projects</h2>\r\n                        <form method=\"POST\">\r\n                            <div className=\"form-group\">\r\n                                <p class=\"text-left\">Project Name</p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Project Name\"\r\n                                    value={this.state.projects.projects1}\r\n                                    onChange={this.handleProjects1Change}\r\n                                    className=\"form-control\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <div className=\"card-body\">\r\n                        <p class=\"text-left\">Name Of Skills</p>\r\n                        <form method=\"POST\" onSubmit={this.createResume}>\r\n                            <div className=\"form-group\">\r\n\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Skill Name\"\r\n                                    value={this.state.skills.skills1}\r\n                                    onChange={this.handleSkills1Change}\r\n                                    className=\"form-control\" />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n                            <div class=\"divider\" />\r\n                            <button className=\"btn btn-danger\" onClick={this.cancel}>Cancel</button>\r\n                            <div>\r\n                                <label className=\"text-danger\"> * are mandatory</label>\r\n                                <p style={{ color: \"green\" }}>{this.state.answer}</p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateExResume","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\EditFresher.js",["195","196"],"import React from 'react';\r\n\r\n\r\nimport axios from 'axios';\r\nimport FormHeader from './FormHeader';\r\nimport './Login.css'\r\n\r\nclass EditFresher extends React.Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state={\r\n        users:[],\r\n        answer:\"\",\r\n        fresherId:this.props.match.params.fresherId,\r\n       \r\n        fresherName: \"\",\r\n            email: \"\",\r\n            contactNo: \"\",\r\n            age: \" \",\r\n            address:\"\",\r\n            fresherNameError:\"\",\r\n            emailError: \"\",\r\n            contactNoError: \"\",\r\n            skills: [\r\n              {\r\n\r\n                  skillName: \"\"\r\n\r\n              }\r\n          ],\r\n            \r\n            hobbies: [\r\n                {\r\n                    \r\n                    hobbyName: \" \"\r\n            \r\n                }\r\n            ],\r\n            projects: [\r\n                {\r\n                    \r\n                    projectName: \"\",\r\n                    year: \"2018\"\r\n                    \r\n                }\r\n            ],\r\n            academic:{\r\n                hscPercent: \"\",\r\n               sscPercent: \"\",\r\n               degree: \"\",\r\n               branch: \"\",\r\n               degreePercent: \"\",\r\n               noOfBacklogs: \" \",\r\n               yeargap: \" \"\r\n               \r\n           }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    componentWillMount(){\r\n      axios.get('http://localhost:8080/fresher' + '/'+this.state.fresherId).then((response)=>{\r\n        this.setState({users: response.data})\r\n        console.log(this.state.users.fresherName);\r\n        this.setState({fresherName:this.state.users.fresherName});\r\n        \r\n    this.setState({email:this.state.users.email});\r\n        \r\n    this.setState({age:this.state.users.age});\r\n    this.setState({contactNo:this.state.users.contactNo});\r\n    this.setState({address:this.state.users.address});\r\n    \r\n   var projects={...this.state.projects};\r\n   projects.projectName=this.state.users?.projects?.[0]?.projectName;\r\n   this.setState({projects});\r\n\r\n   var skills={...this.state.skills};\r\n   skills.skillName=this.state.users?.skills?.[0]?.skillName;\r\n   this.setState({skills});\r\n\r\n   var hobbies={...this.state.hobbies};\r\n   hobbies.hobbyName=this.state.users?.hobbies?.[0]?.hobbyName;\r\n   this.setState({hobbies});\r\n\r\n   var academic={...this.state.academic};\r\n   academic.hscPercent=this.state.users?.academic?.hscPercent\r\n   academic.sscPercent=this.state.users?.academic?.sscPercent\r\n   academic.degree=this.state.users?.academic?.degree\r\n   academic.branch=this.state.users?.academic?.branch\r\n   academic.degreePercent=this.state.users?.academic?.degreePercent\r\n   academic.noOfBacklogs=this.state.users?.academic?.noOfBacklogs\r\n   academic.yeargap=this.state.users?.academic?.yeargap\r\n   this.setState({academic});\r\n\r\n    });\r\n    \r\n   \r\n           \r\n    }\r\n    \r\n\r\n    \r\n      handleSkills1Change = (e) => {\r\n\r\n        // 1. Make a shallow copy of the projects\r\n        let skills = [...this.state.skills];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let skill = { ...skills[0] };\r\n        // 3. Replace the property you're intested in\r\n        skill.skillName = e.target.value;\r\n        // 4. Put it back into our array. N.B. we are mutating the array here, but that's why we made a copy first\r\n        skills[0] = skill;\r\n        // 5. Set the state to our new copy\r\n        this.setState({ skills });\r\n    }\r\n\r\n\r\n    handleProjectsChange = (e) => {\r\n        let projects = [this.state.projects];\r\n        let project = {...projects[0]};\r\n        project.projectName = e.target.value;\r\n       projects[0] = project;\r\n       this.setState({projects});\r\n   }\r\n   handlehobbyChange = (e) => {\r\n    let hobbies = [this.state.hobbies];\r\n    let hobby = {...hobbies[0]};\r\n    hobby.hobbyName = e.target.value;\r\n   hobbies[0] = hobby;\r\n   this.setState({hobbies});\r\n}\r\n\r\nhandleSubmit1 = (e) => {\r\n  e.preventDefault();\r\n\r\nlet fbody={fresherName:this.state.fresherName,email:this.state.email,contactNo:this.state.contactNo,address:this.state.address\r\n             , skills: [\r\n              {\r\n                  \r\n                  skillName: this.state.skills?.[0]?.skillName\r\n              \r\n              }\r\n          ],\r\n          hobbies: [\r\n              {\r\n                  \r\n                  hobbyName:this.state.hobbies?.[0]?.hobbyName\r\n          \r\n              }\r\n          ],\r\n          projects: [\r\n              {\r\n                  \r\n                  projectName: this.state.projects?.[0]?.projectName,\r\n                  year: \"\"\r\n                  \r\n              }\r\n          ],\r\n          academic:{\r\n              hscPercent: this.state.academic?.hscPercent,\r\n             sscPercent: this.state.academic?.sscPercent,\r\n             degree: this.state.academic?.degree,\r\n             branch: this.state.academic?.branch,\r\n             degreePercent: this.state.academic?.degreePercent,\r\n             noOfBacklogs: this.state.academic?.noOfBacklogs,\r\n             yeargap: this.state.academic?.yeargap\r\n             \r\n         }};\r\n  const URI = 'http://localhost:8080/fresher'+ '/'+this.state.fresherId;\r\n  axios.put(URI,fbody).then((response)=>{\r\n    this.props.history.push('/viewresume');\r\n      this.setState({answer: response.data})\r\n  })\r\n  .catch((error) => console.log(error));\r\n   }\r\n \r\n\r\nrender(){\r\n    return (\r\n   <div class=\"o-img\">\r\n   <FormHeader></FormHeader>\r\n   \r\n\r\n\r\n <div className = \"card col-lg-6 offset-md-3 offset-md-3\">\r\n <div className = \"card-body\">\r\n\r\n        \r\n           \r\n          <form method=\"POST\" onSubmit={this.handleSubmit1}>\r\n          <h2 className=\"text-upper text-center text-dark\">PERSONAL INFORMATION</h2>\r\n    \r\n          \r\n          <label>\r\n          <div class=\"card-body\">\r\n          <div class=\"row\">\r\n          <div class=\"col\">\r\n          <p class=\"text-left\">Name</p>\r\n            <input\r\n              type=\"text\"\r\n                    \r\n              value={this.state.fresherName}\r\n              onChange={(e) => this.setState({fresherName: e.target.value })}\r\n              class=\"form-control\"\r\n              Placeholder=\"enter name\"\r\n            />\r\n            <p style={{color:\"red\"}}>{this.state.fresherNameError}</p>\r\n          </div>\r\n          <div class=\"col\">\r\n          <p class=\"text-left\">Email</p>\r\n            <input\r\n              type=\"text\"\r\n              \r\n              value={this.state.email}\r\n              className=\"form-control\"\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n              Placeholder=\"enter email\"\r\n            />\r\n            \r\n          </div>\r\n          </div>\r\n          <div class=\"row\">\r\n          <div class=\"col\">\r\n          <p class=\"text-left\">ContactNo</p>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.contactNo}\r\n            className=\"form-control\"\r\n            onChange={(e) => this.setState({contactNo: e.target.value })}\r\n            Placeholder=\"enter contact no\"\r\n          />\r\n                \r\n              <p style={{color:\"red\"}}>{this.state.contactNoError}</p>\r\n            \r\n          </div>\r\n          \r\n          <div class=\"col\">\r\n          <p class=\"text-left\">Age</p>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.age}\r\n            className=\"form-control\"\r\n            onChange={(e) => this.setState({age: e.target.value })}\r\n            Placeholder=\"enter age\"\r\n          />\r\n        </div>\r\n        </div>\r\n        <div>\r\n        <p class=\"text-left\">Address</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.address}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({address: e.target.value })}\r\n          Placeholder=\"enter address\"\r\n        />\r\n       </div>\r\n       </div>\r\n       \r\n       \r\n      <h2 className=\"text-upper text-center text-dark\">ACADEMIC INFORMATION</h2>\r\n      <div class=\"row\">\r\n      <div class=\"col\">\r\n      <p class=\"text-left\">HSC %</p>\r\n      <input\r\n        type=\"text\"\r\n        value={this.state.academic.hscPercent}\r\n        className=\"form-control\"\r\n       onChange={(e) => this.setState({ academic: { ...this.state.academic, hscPercent:e.target.value}})}\r\n       Placeholder=\"HSC %\"\r\n      \r\n      />\r\n     </div>\r\n       <div class=\"col\">\r\n       <p class=\"text-left\">SSC %</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.sscPercent}\r\n          className=\"form-control\"\r\n         onChange={(e) => this.setState({ academic: { ...this.state.academic, sscPercent:e.target.value}})}\r\n         Placeholder=\"SSC %\"\r\n        />\r\n        </div>\r\n       </div>\r\n       <p></p>\r\n       <div class=\"row\">\r\n       <div class=\"col\">\r\n       <p class=\"text-left\">degree</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.degree}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({ academic: { ...this.state.academic, degree:e.target.value}})}\r\n          Placeholder=\"Degree\"\r\n        \r\n        />\r\n       </div>\r\n\r\n       <div class=\"col\">\r\n       <p class=\"text-left\">branch</p>\r\n       <input\r\n         type=\"text\"\r\n         value={this.state.academic.branch}\r\n         className=\"form-control\"\r\n         onChange={(e) => this.setState({ academic: { ...this.state.academic, branch:e.target.value}})}\r\n         Placeholder=\"branch\"\r\n        \r\n       />\r\n      </div>\r\n      </div>\r\n      <div>\r\n      <p class=\"text-left\">Degree %</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.degreePercent}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({ academic: { ...this.state.academic, degreePercent:e.target.value}})}\r\n          Placeholder=\"Degree %\"\r\n        />\r\n       </div>\r\n       <div>\r\n       <p class=\"text-left\">No of Backlogs</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.noOfBacklogs}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({ academic: { ...this.state.academic, noOfBacklogs:e.target.value}})}\r\n          Placeholder=\"No of backlogs\"\r\n        />\r\n       </div>\r\n       <div>\r\n       <p class=\"text-left\">year gap</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.yeargap}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({ academic: { ...this.state.academic, yeargap:e.target.value}})}\r\n          Placeholder=\"year gap\"\r\n        />\r\n       </div>\r\n       <h2 className=\"text-upper text-center text-dark\">HOBBIES</h2>\r\n       <div>\r\n       <p class=\"text-left\">hobbyname</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.hobbies.hobbyName}\r\n          onChange={this.handlehobbyChange}\r\n          className=\"form-control\"\r\n          Placeholder=\"hobbyname\"\r\n        \r\n        />\r\n       </div>\r\n       <h2 className=\"text-upper text-center text-dark\">PROJECTS</h2>\r\n       <div>\r\n        \r\n        <p class=\"text-left\">projectname</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.projects.projectName}\r\n          className=\"form-control\"\r\n         onChange={this.handleProjectsChange}\r\n         Placeholder=\"Project name\"\r\n        />\r\n       </div>\r\n      \r\n\r\n       <h2 className=\"text-upper text-center text-dark\">TECHNICAL SKILLS</h2>\r\n                                <div>\r\n                                    <p class=\"text-left\">technical languages / technologies</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.skills.skillName}\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => this.setState({ skills: { ...this.state.skills, skillName:e.target.value}})}\r\n                                        Placeholder=\"skills\"\r\n                                    />\r\n                                </div>\r\n       \r\n      \r\n       </label>\r\n    \r\n          <p><button class=\"btn btn-primary\" hover opacity=\"1\">Save</button></p>\r\n          <p style={{color:\"green\"}}>{this.state.answer}</p>\r\n          \r\n        </form>\r\n        \r\n        </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default EditFresher","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ForgetPassword.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FreshNavbar.js",["197"],"\r\nimport React from 'react'\r\n\r\nimport { BrowserRouter ,Switch , Route } from 'react-router-dom'\r\n\r\nimport EditForm from './EditFresher'\r\nimport FormHeader from './FormHeader'\r\nimport FPersonalInfo from './FPersonalInfo'\r\nimport ViewForm from './ViewForm'\r\nimport FreshDownload from './FreshDownload'\r\nimport './Login.css'\r\nfunction FreshNavbar (props) {\r\n    return (\r\n       <div class=\"o-img\">\r\n        <div className=\"App\">\r\n       <FormHeader></FormHeader>\r\n        <BrowserRouter>\r\n        <switch>\r\n        \r\n        <Route path='/first' component={FPersonalInfo}/>\r\n        <Route path='/viewresume' component={ViewForm}/>\r\n        <Route path='/edit' component={EditForm}/>\r\n        <Route path='/fdownload' component={FreshDownload}/>\r\n          \r\n        </switch>\r\n        </BrowserRouter>\r\n        </div>\r\n       </div>\r\n    )\r\n}\r\nexport default FreshNavbar","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\LoginComponent.js",["198"],"import React,{ Component } from 'react'\r\nimport AdminService from '../services/AdminService';\r\n// // import axios from 'axios';\r\n import l2 from './l2.jpg';\r\nclass LoginComponent extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n           \r\n            id: '',\r\n            username: '',\r\n            password: ''\r\n        }\r\n        this.changeIdHandler = this.changeIdHandler.bind(this);\r\n        this.changeUsernameHandler = this.changeUsernameHandler.bind(this);\r\n        this.changePasswordHandler = this.changePasswordHandler.bind(this);\r\n        this.loginAdmin=this.loginAdmin.bind(this);\r\n        // this.handleClick=this.handleClick.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        let admin= {id: this.state.id, username: this.state.username, password: this.state.password};\r\n           AdminService.loginAdmin(admin).then( (res) =>{\r\n                let ad = res.data;\r\n                this.setState({id: ad.id,\r\n                    username: ad.username,\r\n                    password : ad.password\r\n                });\r\n            });\r\n\r\n        } \r\n         \r\n         \r\n        loginAdmin = (e) => {\r\n            \r\n            e.preventDefault();\r\n            let admin= {id: this.state.id, username: this.state.username, password: this.state.password};\r\n             \r\n            AdminService.loginAdmin(admin).then(res =>{ this.props.history.push('/adminmenu')})\r\n        }\r\n\r\n\r\n   \r\n        \r\n    changeIdHandler= (event) => {\r\n        this.setState({id: event.target.value});\r\n    }\r\n\r\n    changeUsernameHandler= (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n   \r\n    changePasswordHandler= (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n   \r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                \r\n               <div>\r\n\r\n               <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n               <div class=\"container-fluid\">\r\n             \r\n                    <a class=\"text-center text-light p-3\" href=\"/login\"> ADMIN LOGIN</a>\r\n                    <a href=\"/admin\" class=\"text-light\"> Back to HOME</a>\r\n                    </div>\r\n                </nav>\r\n                </div>\r\n                <div class=\"bg-img\">\r\n                \r\n                <h3 style={{color:\"white\"}}>LOG IN</h3>\r\n                    <div id=\"login\" className=\"card-body\">\r\n                    <form class=\"needs-validation\" novalidate>\r\n                    <label>\r\n                    <div className=\"form-group\">\r\n                    <p class=\"text-center text-light\"><b>ID</b></p>\r\n                    <input placeholder=\"Enter your id\" type=\"text\" className=\"form-control\"  required\r\n                    value={this.state.id} onChange={this.changeIdHandler}/>\r\n                    </div>\r\n                    <p class=\"text-center text-light\"><b>USERNAME</b></p>\r\n                    \r\n                    <input placeholder=\"Enter your username\" type=\"text\" id=\"username\" name=\"username\" className=\"form-control\" required\r\n                                                value={this.state.username} onChange={this.changeUsernameHandler}/>\r\n\r\n\r\n                     <div className=\"form-group\">\r\n                    <p class=\"text-center text-light\"><b>PASSWORD</b></p>\r\n                    <input  type=\"password\"  pattern=\".{5,}\" id=\"password\" title=\"Five or more characters\" placeholder=\"Enter your password\" className=\"form-control\" required\r\n                                                value={this.state.password} onChange={this.changePasswordHandler}/>\r\n                    </div>                           \r\n                    </label>\r\n                    <br/>\r\n                    <button className=\"btn bg-light text-dark text-center\" type=\"submit\" onClick={this.loginAdmin} >Login</button>\r\n                    </form>\r\n\r\n                    \r\n                </div>\r\n                </div>\r\n                </div>\r\n                \r\n\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default LoginComponent","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ListOfFreshers.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\AdminMenu.js",["199"],"import React, { Component } from 'react';\r\n\r\nimport l3 from './l3.jpg';\r\nclass AdminMenu extends Component {\r\n    constructor(props) {\r\n        super(props)  \r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n                <div class= \"p-2 mb-1\">\r\n                <header>\r\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div class=\"container-fluid\">\r\n\r\n                   \r\n                    <a  href=\"/admin\" className=\"navbar-brand  text-light p-3\"><h3 >MENU</h3></a>\r\n                    <a href=\"/admin/userslist\"  className=\"text-light  text-light p-3\">EXPERIENCED INFO</a>\r\n                    <a href=\"/admin/allfreshers\" className=\"text-light p-3\">FRESHERS INFO</a>\r\n                    \r\n                    <a href=\"/admin\" className=\"bg-dark text-light\">LOGOUT</a>\r\n                    </div>\r\n                    </nav>\r\n            <br></br>\r\n            <img src=\"https://i.pinimg.com/originals/b9/49/c8/b949c86a570df07a7440abe39405834c.gif\" className=\"big-banner\"   alt=\"Responsive\"></img>\r\n       \r\n                    \r\n                </header>\r\n            </div>\r\n           </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminMenu\r\n","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ListOfUsers.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ExperiencedForgotPass.js",["200","201","202"],"import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport ExperiencedService from '../services/ExperiencedService';\r\n\r\nclass  ExperiencedForgotPass extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            \r\n            userId:'',\r\n            password:'',\r\n            fmessage:''\r\n            \r\n        }\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        let ubody={userId:this.state.userId,password:this.state.password};\r\n        ExperiencedService.updateExperiencedPass(ubody).\r\n        then((response)=>{\r\n            this.props.history.push('/experience');\r\n        }).catch((error)=>{\r\n            \r\n       alert(error.response.data.message);\r\n        });\r\n        \r\n        }\r\n    render() {\r\n        return(\r\n        <div class=\"p-img\">\r\n      \r\n        <div className = \"card-body\">\r\n         <div  box-sizing= \"border-box\">\r\n          \r\n\r\n         <br></br>\r\n          <form method=\"POST\" onSubmit={this.handleSubmit} >\r\n          <label>\r\n          <div>\r\n          <h4 style={{color:\"blue\"}}> USER ID </h4>\r\n          \r\n                <input\r\n                  name=\"username\"\r\n                  value={this.state.userId}\r\n                  className=\"form-control\"\r\n                  onChange={(event)=>{this.setState({userId:event.target.value})}}\r\n                  Placeholder=\"User Id\"\r\n                  \r\n                 \r\n                />\r\n              </div>\r\n              <div>\r\n             \r\n              <h4 style={{color:\"blue\"}}> NEW PASSWORD </h4>\r\n          \r\n              <input\r\n              type=\"password\"\r\n                name=\"password\"\r\n               \r\n                value={this.state.password}\r\n                className=\"form-control\"\r\n                onChange={(event)=>{this.setState({password:event.target.value})}}\r\n                Placeholder=\"New Password\"\r\n                  \r\n               \r\n              />\r\n            </div>\r\n         \r\n        </label>\r\n        <p></p>\r\n        <p>\r\n       \r\n        <button class=\"btn btn-primary\"  hover opacity=\"1\">Change Password</button>\r\n        </p>\r\n       \r\n        </form>\r\n       \r\n          </div>\r\n          </div>\r\n          </div>\r\n        )\r\n    }\r\n        \r\n  }\r\n  export default ExperiencedForgotPass;","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\FreshPassForgot.js",["203","204"],"import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass FreshPassForgot extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            \r\n            username:'',\r\n            password:'',\r\n            fmessage:''\r\n            \r\n        }\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        let fbody={username:this.state.username,password:this.state.password};\r\n        axios.patch('http://localhost:8081/fresher/forgetpass',fbody).\r\n        then((response)=>{\r\n            this.props.history.push('/fresher');\r\n        }).catch((error)=>{\r\n            \r\n       alert(error.response.data.message);\r\n        });\r\n        \r\n        }\r\n    render() {\r\n        return(\r\n        <div class=\"p-img\">\r\n      \r\n        <div className = \"card-body\">\r\n         <div  box-sizing= \"border-box\">\r\n          \r\n\r\n         <br></br>\r\n          <form method=\"POST\" onSubmit={this.handleSubmit} >\r\n          <label>\r\n          <div>\r\n          <h4 style={{color:\"blue\"}}> USERNAME </h4>\r\n          \r\n                <input\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  className=\"form-control\"\r\n                  onChange={(event)=>{this.setState({username:event.target.value})}}\r\n                  Placeholder=\"username\"\r\n                  \r\n                 \r\n                />\r\n              </div>\r\n              <div>\r\n             \r\n              <h4 style={{color:\"blue\"}}> PASSWORD </h4>\r\n          \r\n              <input\r\n              type=\"password\"\r\n                name=\"password\"\r\n               \r\n                value={this.state.password}\r\n                className=\"form-control\"\r\n                onChange={(event)=>{this.setState({password:event.target.value})}}\r\n                Placeholder=\"password\"\r\n                  \r\n               \r\n              />\r\n            </div>\r\n         \r\n        </label>\r\n        <p></p>\r\n        <p>\r\n       \r\n        <button class=\"btn btn-primary\"  hover opacity=\"1\">Change Password</button>\r\n        </p>\r\n       \r\n        </form>\r\n       \r\n          </div>\r\n          </div>\r\n          </div>\r\n        )\r\n    }\r\n        \r\n  }\r\n  export default FreshPassForgot;","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\HomeDesign.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\Slides.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\AHeaderComponent.js",["205"],"import React, { Component } from 'react'\r\nimport {BsPerson} from \"react-icons/bs\";\r\nimport {MdLockOpen} from \"react-icons/md\";\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                \r\n                <nav class=\" bg-dark\">\r\n        \r\n                    <a class=\"active\" href=\"/admin\" className=\"navbar-brand   text-light p-2 \"><h3 >WELCOME ADMIN</h3></a>\r\n                    <a href=\"/login\"  className=\"text-light  text-light \"><BsPerson />LOGIN</a>\r\n                    <a href=\"/forgetpassword\" className=\"text-light p-5\"><MdLockOpen/>FORGETPASSWORD</a>\r\n                    <a href=\"/\"className=\"   text-light\">HOME</a>\r\n                  \r\n                   </nav>\r\n                   <br></br>\r\n                  \r\n           <img src=\"https://media0.giphy.com/media/gh0RRgkTXedvF0pDc0/giphy.gif?cid=ecf05e4704e793f2189e7657330a99727f3fd7abc923e942&rid=giphy.gif\" width=\"1400\" height=\"620\" className=\"float-right\"/>       \r\n            </div>\r\n            \r\n)\r\n    }\r\n}\r\n\r\nexport default HeaderComponent\r\n","C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\LogoutComponent.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\EHeaderComponent.js",["206"],"import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport CreateExResume from './CreateExResume';\r\nimport ViewExResume from './ViewExResume';\r\nimport UpdateExResume from './UpdateExResume';\r\nimport DownloadExResume from './DownloadExResume';\r\n\r\nfunction HeaderComponent() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n          <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">ONLINE RESUME BUILDER</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item\">\r\n                  <Link class=\"nav-link\" to=\"/createResume\">Create Resume</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <Link class=\"nav-link\" to=\"/viewResume\">View Created Resume</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <Link class=\"nav-link\" to=\"/experienced\">Download Created Resume</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link \" href=\"/\">Logout</a>\r\n                </li>\r\n\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n\r\n\r\n      <Switch>\r\n        <Route path='/createResume' component={CreateExResume} />\r\n        <Route path='/viewResume' component={ViewExResume} />\r\n        <Route path='/updateResume/:id' component={UpdateExResume} />\r\n        <Route path='/experienced' component={DownloadExResume} />\r\n      </Switch>\r\n\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default HeaderComponent","C:\\Users\\dell\\onlineresumebuilder\\src\\services\\FresherService.js",["207","208"],"import axios from 'axios';\r\n\r\nconst FRESHER_API__BASE_URL = \"http://localhost:8081/fresher\";\r\n\r\nclass FresherService {\r\n\r\n    getResumeById(resumeId)\r\n    {\r\n        return axios.get(FRESHER_API__BASE_URL + '/' + resumeId);\r\n    }  \r\n\r\n    saveFresher(fresher) {\r\n        return axios.post(FRESHER_API__BASE_URL + \"/\", fresher);\r\n    }\r\n\r\n    getFresherById(id) {\r\n        return axios.get(FRESHER_API__BASE_URL + \"/\" + id);\r\n    }\r\n\r\n\r\n    deleteFresherById(id) {\r\n        return axios.delete(FRESHER_API__BASE_URL + \"/deleteFresherById/\" + id);\r\n    }\r\n\r\n    login(user, pass) {\r\n        return axios.get(FRESHER_API__BASE_URL + \"/login\" + \"/\" + pass + \"/\" + user)\r\n    }\r\n\r\n    register(user) {\r\n        return axios.post(FRESHER_API__BASE_URL + \"/register\", user)\r\n    }\r\n\r\n    updateFresher(id, fresher) {\r\n        return axios.put(FRESHER_API__BASE_URL + \"/\" + id, id, fresher)\r\n    }\r\n\r\n    getPdfGeneratedById(id, template) {\r\n        return axios.get( 'http://localhost:8081/fresher/download' + '/' + id + '/' + template, { responseType: 'blob' });\r\n    }\r\n\r\n}\r\n\r\nexport default new FresherService()\r\n\r\n","C:\\Users\\dell\\onlineresumebuilder\\src\\services\\ExperiencedService.js",["209"],"import axios from 'axios'\r\n\r\nconst EXPERIENCED_API_BASE_URL = \"http://localhost:8081/resume\";\r\n\r\nclass ExperiencedService {\r\n\r\n    addExperienced(experienced) {\r\n        return axios.post(EXPERIENCED_API_BASE_URL + \"/addExperienced\", experienced);\r\n    }\r\n\r\n    getExperiencedById(id) {\r\n        return axios.get(EXPERIENCED_API_BASE_URL + \"/\" + id);\r\n    }\r\n\r\n    deleteExperiencedById(id) {\r\n        return axios.delete(EXPERIENCED_API_BASE_URL + \"/deleteExperiencedById/\" + id);\r\n    }\r\n\r\n    login(userId, password) {\r\n        return axios.get(EXPERIENCED_API_BASE_URL + \"/login\" + \"/\" + userId + \"/\" + password)\r\n    }\r\n\r\n    register(user) {\r\n        return axios.post(EXPERIENCED_API_BASE_URL + \"/register\", user)\r\n    }\r\n\r\n    updateExperienced(id, experienced) {\r\n        return axios.put(EXPERIENCED_API_BASE_URL + \"/\" + id, id, experienced)\r\n    }\r\n\r\n    getPdfGeneratedById(id, template) {\r\n        return axios.get(EXPERIENCED_API_BASE_URL + '/' + id + '/' + template, { responseType: 'blob' });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new ExperiencedService()","C:\\Users\\dell\\onlineresumebuilder\\src\\services\\AdminService.js",[],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\ViewExResume.js",[],["210","211"],"C:\\Users\\dell\\onlineresumebuilder\\src\\Component\\UpdateExResume.js",["212"],"import React from 'react';\r\nimport ExperiencedService from '../services/ExperiencedService';\r\nimport axios from 'axios';\r\n\r\nclass UpdateExResume extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            experienced: {},\r\n            id: this.props.match.params.id,\r\n\r\n            firstName: '',\r\n            lastName: '',\r\n            phone: '',\r\n            city: '',\r\n            state: '',\r\n            pincode: '',\r\n            email: '',\r\n            workex: {\r\n                jobTitle: '',\r\n                employerName: '',\r\n                wcity: '',\r\n                wstate: '',\r\n                fromDate: '',\r\n                toDate: ''\r\n            },\r\n            education: {\r\n                ssc: '',\r\n                hsc: '',\r\n                degreeName: '',\r\n                degreePercent: '',\r\n                fieldOfStudy: '',\r\n                startDate: '',\r\n                endDate: ''\r\n            },\r\n            projects: [\r\n                {\r\n                    projects: ''\r\n                },\r\n            ],\r\n            skills: [\r\n                {\r\n                    skills: ''\r\n                },\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        // axios.get('http://localhost:8080/fresher' + '/'+this.state.id).then((response)=>{\r\n        //     this.setState({experienced: response.data})\r\n\r\n        ExperiencedService.getExperiencedById(this.state.id).then((response) => {\r\n            this.setState({ experienced: response.data })\r\n            //console.log(this.state.experienced.fresherName);\r\n            this.setState({ firstName: this.state.experienced.firstName });\r\n            this.setState({ lastName: this.state.experienced.lastName });\r\n            this.setState({ email: this.state.experienced.email });\r\n            this.setState({ phone: this.state.experienced.phone });\r\n            this.setState({ city: this.state.experienced.city });\r\n            this.setState({ state: this.state.experienced.state });\r\n            this.setState({ pincode: this.state.experienced.pincode });\r\n            //projects?.[0]?.projects=this.state.experienced?.projects?.[0]?.projects;\r\n\r\n            var skills = { ...this.state.skills };\r\n            skills.skills1 = this.state.experienced?.skills?.[0]?.skills;\r\n            this.setState({ skills });\r\n\r\n\r\n\r\n            var projects = { ...this.state.projects };\r\n            projects.projects1 = this.state.experienced?.projects?.[0].projects;\r\n            this.setState({ projects });\r\n\r\n\r\n\r\n            //    var education={...this.state.education};\r\n            //    education.ssc=this.state.experienced?.education?.ssc\r\n            //    education.hsc=this.state.experienced?.education?.hsc\r\n            //    education.degree=this.state.experienced?.education?.degree\r\n            //    education.branch=this.state.experienced?.education?.branch\r\n            //    education.degreePercent=this.state.experienced?.education?.degreePercent\r\n            //    education.noOfBacklogs=this.state.experienced?.education?.noOfBacklogs\r\n            //    education.yeargap=this.state.experienced?.education?.yeargap\r\n            //    this.setState({education});\r\n\r\n\r\n            var education = { ...this.state.education };\r\n            education.ssc = this.state.experienced?.education?.ssc;\r\n            education.hsc = this.state.experienced?.education?.hsc;\r\n            education.degreePercent = this.state.experienced?.education?.degreePercent;\r\n            education.fieldOfStudy = this.state.experienced?.education?.fieldOfStudy;\r\n            education.startDate = this.state.experienced?.education?.startDate;\r\n            education.endDate = this.state.experienced?.education?.endDate;\r\n            education.degreeName = this.state.experienced?.education?.degreeName;\r\n            this.setState({ education });\r\n            var workex = { ...this.state.workex };\r\n\r\n            workex.jobTitle = this.state.experienced?.workex?.jobTitle;\r\n            workex.employerName = this.state.experienced?.workex?.employerName;\r\n            workex.wcity = this.state.experienced?.workex?.wcity;\r\n            workex.wstate = this.state.experienced?.workex?.wstate;\r\n            workex.fromDate = this.state.experienced?.workex?.fromDate;\r\n            workex.toDate = this.state.experienced?.workex?.toDate;\r\n            this.setState({ workex });\r\n\r\n        })\r\n    };\r\n\r\n    handleSubmit1 = (e) => {\r\n        e.preventDefault();\r\n\r\n        // axios.put(URI,this.state).then((response)=>{\r\n        //     this.setState({answer: response.data})\r\n        // })\r\n        // .catch((error) => console.log(error));\r\n        //  alert(this.state.answer);\r\n        let ebody = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            phone: this.state.phone,\r\n            city: this.state.city,\r\n            state: this.state.state,\r\n            pincode: this.state.pincode,\r\n            email: this.state.email,\r\n            workex: {\r\n                jobTitle: this.state.workex?.jobTitle,\r\n                employerName: this.state.workex?.employerName,\r\n                wcity: this.state.workex?.wcity,\r\n                wstate: this.state.workex?.wstate,\r\n                fromDate: this.state.workex?.fromDate,\r\n                toDate: this.state.workex?.toDate\r\n            },\r\n            education: {\r\n                ssc: this.state.education?.ssc,\r\n                hsc: this.state.education?.hsc,\r\n                degreeName: this.state.education?.degreeName,\r\n                degreePercent: this.state.education?.degreePercent,\r\n                fieldOfStudy: this.state.education?.fieldOfStudy,\r\n                startDate: this.state.education?.startDate,\r\n                endDate: this.state.education?.endDate\r\n            },\r\n            projects: [\r\n                {\r\n                    projects: this.state.projects?.[0]?.projects\r\n                }\r\n            ],\r\n            skills: [\r\n                {\r\n\r\n                    skills: this.state.skills?.[0]?.skills\r\n\r\n                }\r\n            ]\r\n        }\r\n\r\n        const URI = 'http://localhost:8080/resume' + '/' + this.state.id;\r\n        axios.put(URI, ebody).then((response) => {\r\n            this.props.history.push('/viewResume');\r\n            this.setState({ answer: response.data })\r\n        })\r\n            .catch((error) => console.log(error));\r\n\r\n\r\n\r\n\r\n    }\r\n    handleSkills1Change = (e) => {\r\n        // 1. Make a shallow copy of the projects\r\n        let skills = [this.state.skills];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let skill = { ...skills[0] };\r\n        // 3. Replace the property you're intested in\r\n        skill.skills = e.target.value;\r\n        // 4. Put it back into our array. N.B. we are mutating the array here, but that's why we made a copy first\r\n        skills[0] = skill;\r\n        // 5. Set the state to our new copy\r\n        this.setState({ skills });\r\n    }\r\n\r\n\r\n\r\n    handleProjects1Change = (e) => {\r\n        // 1. Make a shallow copy of the projects\r\n        let projects = [this.state.projects];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let project = { ...projects[0] };\r\n        // 3. Replace the property you're intested in\r\n        project.projects = e.target.value;\r\n        // 4. Put it back into our array. N.B. we are mutating the array here, but that's why we made a copy first\r\n        projects[0] = project;\r\n        // 5. Set the state to our new copy\r\n        this.setState({ projects });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // axios.get('http://localhost:8080/fresher' + '/'+this.state.id).then((response)=>{\r\n        //     this.setState({experienced: response.data})\r\n\r\n        ExperiencedService.getExperiencedById(this.state.id).then((response) => {\r\n            this.setState({ experienced: response.data })\r\n            //console.log(this.state.experienced.fresherName);\r\n            this.setState({ firstName: this.state.experienced.firstName });\r\n            this.setState({ lastName: this.state.experienced.lastName });\r\n            this.setState({ email: this.state.experienced.email });\r\n            this.setState({ phone: this.state.experienced.phone });\r\n            this.setState({ city: this.state.experienced.city });\r\n            this.setState({ state: this.state.experienced.state });\r\n            this.setState({ pincode: this.state.experienced.pincode });\r\n            //projects?.[0]?.projects=this.state.experienced?.projects?.[0]?.projects;\r\n\r\n            var skills = { ...this.state.skills };\r\n            skills.skills1 = this.state.experienced?.skills?.[0]?.skills;\r\n            this.setState({ skills });\r\n\r\n\r\n\r\n            var projects = { ...this.state.projects };\r\n            projects.projects1 = this.state.experienced?.projects?.[0].projects;\r\n            this.setState({ projects });\r\n\r\n\r\n\r\n            //    var education={...this.state.education};\r\n            //    education.ssc=this.state.experienced?.education?.ssc\r\n            //    education.hsc=this.state.experienced?.education?.hsc\r\n            //    education.degree=this.state.experienced?.education?.degree\r\n            //    education.branch=this.state.experienced?.education?.branch\r\n            //    education.degreePercent=this.state.experienced?.education?.degreePercent\r\n            //    education.noOfBacklogs=this.state.experienced?.education?.noOfBacklogs\r\n            //    education.yeargap=this.state.experienced?.education?.yeargap\r\n            //    this.setState({education});\r\n\r\n\r\n            var education = { ...this.state.education };\r\n            education.ssc = this.state.experienced?.education?.ssc;\r\n            education.hsc = this.state.experienced?.education?.hsc;\r\n            education.degreePercent = this.state.experienced?.education?.degreePercent;\r\n            education.fieldOfStudy = this.state.experienced?.education?.fieldOfStudy;\r\n            education.startDate = this.state.experienced?.education?.startDate;\r\n            education.endDate = this.state.experienced?.education?.endDate;\r\n            education.degreeName = this.state.experienced?.education?.degreeName;\r\n            this.setState({ education });\r\n            var workex = { ...this.state.workex };\r\n\r\n            workex.jobTitle = this.state.experienced?.workex?.jobTitle;\r\n            workex.employerName = this.state.experienced?.workex?.employerName;\r\n            workex.wcity = this.state.experienced?.workex?.wcity;\r\n            workex.wstate = this.state.experienced?.workex?.wstate;\r\n            workex.fromDate = this.state.experienced?.workex?.fromDate;\r\n            workex.toDate = this.state.experienced?.workex?.toDate;\r\n            this.setState({ workex });\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <form method=\"POST\" onSubmit={this.handleSubmit}>\r\n   <label>\r\n   <div>\r\n         <label>Enter the id of the resume which you want to update:</label>\r\n         <input\r\n           name=\"id\"\r\n           value={this.state.id}\r\n           className=\"form-control\"\r\n           onChange={(event)=>{this.setState({id:event.target.value})}}\r\n           \r\n          \r\n         />\r\n       </div>\r\n       \r\n  \r\n </label>\r\n <p>\r\n <button className=\"btn btn-outline-info mt-3 \">Edit</button>\r\n </p>\r\n </form> */}\r\n\r\n\r\n\r\n                <div>\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <div className=\"card-body\">\r\n                            <h2>Enter your personal details:</h2>\r\n                            <form method=\"POST\" >\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>First Name:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.firstName}\r\n                                        onChange={(e) => this.setState({ firstName: e.target.value })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Last Name:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.lastName}\r\n                                        onChange={(e) => this.setState({ lastName: e.target.value })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Phone number:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.phone}\r\n                                        onChange={(e) => this.setState({ phone: e.target.value })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>City:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.city}\r\n                                        onChange={(e) => this.setState({ city: e.target.value })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>State:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.state}\r\n                                        onChange={(e) => this.setState({ state: e.target.value })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Pincode:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.pincode}\r\n                                        onChange={(e) => this.setState({ pincode: e.target.value })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email Id:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.email}\r\n                                        onChange={(e) => this.setState({ email: e.target.value })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <div className=\"card-body\">\r\n                            <h2>Past Work Experience:</h2>\r\n                            <form method=\"POST\">\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Job Title:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.workex.jobTitle}\r\n\r\n                                        onChange={(e) => this.setState({ workex: { ...this.state.workex, jobTitle: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Name of previous organization:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.workex.employerName}\r\n\r\n                                        onChange={(e) => this.setState({ workex: { ...this.state.workex, employerName: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Previous Work Location City:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.workex.wcity}\r\n\r\n                                        onChange={(e) => this.setState({ workex: { ...this.state.workex, wcity: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Previous Work Location State:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.workex.wstate}\r\n\r\n                                        onChange={(e) => this.setState({ workex: { ...this.state.workex, wstate: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Starting Date:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.workex.fromDate}\r\n                                        onChange={(e) => this.setState({ workex: { ...this.state.workex, fromDate: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Ending Date:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.workex.toDate}\r\n                                        onChange={(e) => this.setState({ workex: { ...this.state.workex, toDate: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <div className=\"card-body\">\r\n                            <h2>Education:</h2>\r\n                            <form method=\"POST\">\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>SSC Percentage:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.education.ssc}\r\n                                        onChange={(e) => this.setState({ education: { ...this.state.education, ssc: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>HSC Percentage:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.education.hsc}\r\n                                        onChange={(e) => this.setState({ education: { ...this.state.education, hsc: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Name of Degree:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.education.degreeName}\r\n                                        onChange={(e) => this.setState({ education: { ...this.state.education, degreeName: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Percentage of Degree:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.education.degreePercent}\r\n                                        onChange={(e) => this.setState({ education: { ...this.state.education, degreePercent: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Field of Study:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.education.fieldOfStudy}\r\n                                        onChange={(e) => this.setState({ education: { ...this.state.education, fieldOfStudy: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Starting Date:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.education.startDate}\r\n                                        onChange={(e) => this.setState({ education: { ...this.state.education, startDate: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Ending Date:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.education.endDate}\r\n                                        onChange={(e) => this.setState({ education: { ...this.state.education, endDate: e.target.value } })}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <div className=\"card-body\">\r\n                            <h2>Enter your Projects:</h2>\r\n                            <form method=\"POST\">\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Project Names:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.projects.projects1}\r\n                                        onChange={this.handleProjects1Change}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <div className=\"card-body\">\r\n                            <h2>Enter your Skills:</h2>\r\n                            <form method=\"POST\" onSubmit={this.createResume}>\r\n                                <div className=\"form-group\">\r\n                                    <label text-align='left'>Name of Skills:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.skills.skills1}\r\n                                        onChange={this.handleSkills1Change}\r\n                                        className=\"form-control\" />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-success\" onClick={this.handleSubmit1}>Save</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateExResume",{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":2,"column":17,"nodeType":"219","messageId":"220","endLine":2,"endColumn":25},{"ruleId":"221","severity":1,"message":"222","line":13,"column":11,"nodeType":"223","endLine":13,"endColumn":44},{"ruleId":"221","severity":1,"message":"222","line":9,"column":11,"nodeType":"223","endLine":9,"endColumn":44},{"ruleId":"217","severity":1,"message":"224","line":4,"column":27,"nodeType":"219","messageId":"220","endLine":4,"endColumn":33},{"ruleId":"217","severity":1,"message":"225","line":4,"column":35,"nodeType":"219","messageId":"220","endLine":4,"endColumn":41},{"ruleId":"217","severity":1,"message":"226","line":4,"column":44,"nodeType":"219","messageId":"220","endLine":4,"endColumn":49},{"ruleId":"217","severity":1,"message":"227","line":4,"column":51,"nodeType":"219","messageId":"220","endLine":4,"endColumn":61},{"ruleId":"217","severity":1,"message":"228","line":7,"column":8,"nodeType":"219","messageId":"220","endLine":7,"endColumn":18},{"ruleId":"217","severity":1,"message":"229","line":8,"column":8,"nodeType":"219","messageId":"220","endLine":8,"endColumn":23},{"ruleId":"230","severity":1,"message":"231","line":25,"column":46,"nodeType":"232","messageId":"233","endLine":25,"endColumn":47},{"ruleId":"234","severity":1,"message":"235","line":25,"column":101,"nodeType":"236","messageId":"237","endLine":25,"endColumn":102,"fix":"238"},{"ruleId":"217","severity":1,"message":"218","line":2,"column":17,"nodeType":"219","messageId":"220","endLine":2,"endColumn":25},{"ruleId":"221","severity":1,"message":"222","line":11,"column":11,"nodeType":"223","endLine":11,"endColumn":44},{"ruleId":"230","severity":1,"message":"231","line":23,"column":47,"nodeType":"232","messageId":"233","endLine":23,"endColumn":48},{"ruleId":"230","severity":1,"message":"231","line":46,"column":64,"nodeType":"232","messageId":"233","endLine":46,"endColumn":65},{"ruleId":"239","severity":1,"message":"240","line":83,"column":11,"nodeType":"223","endLine":83,"endColumn":39},{"ruleId":"241","severity":1,"message":"242","line":204,"column":5,"nodeType":"236","endLine":204,"endColumn":15},{"ruleId":"241","severity":1,"message":"242","line":205,"column":5,"nodeType":"236","endLine":205,"endColumn":15},{"ruleId":"241","severity":1,"message":"242","line":206,"column":5,"nodeType":"236","endLine":206,"endColumn":15},{"ruleId":"241","severity":1,"message":"242","line":207,"column":5,"nodeType":"236","endLine":207,"endColumn":15},{"ruleId":"241","severity":1,"message":"242","line":208,"column":5,"nodeType":"236","endLine":208,"endColumn":15},{"ruleId":"217","severity":1,"message":"243","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"244","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":58,"column":95,"nodeType":"236","messageId":"237","endLine":58,"endColumn":96,"fix":"245"},{"ruleId":"217","severity":1,"message":"246","line":97,"column":17,"nodeType":"219","messageId":"220","endLine":97,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":63,"column":49,"nodeType":"232","messageId":"233","endLine":63,"endColumn":50},{"ruleId":"230","severity":1,"message":"231","line":170,"column":46,"nodeType":"232","messageId":"233","endLine":170,"endColumn":47},{"ruleId":"217","severity":1,"message":"225","line":4,"column":25,"nodeType":"219","messageId":"220","endLine":4,"endColumn":31},{"ruleId":"217","severity":1,"message":"247","line":4,"column":9,"nodeType":"219","messageId":"220","endLine":4,"endColumn":11},{"ruleId":"217","severity":1,"message":"248","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":10},{"ruleId":"217","severity":1,"message":"243","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"244","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":20,"column":56,"nodeType":"236","messageId":"237","endLine":20,"endColumn":57,"fix":"249"},{"ruleId":"217","severity":1,"message":"243","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":19,"column":70,"nodeType":"236","messageId":"237","endLine":19,"endColumn":71,"fix":"250"},{"ruleId":"251","severity":1,"message":"252","line":28,"column":12,"nodeType":"223","endLine":28,"endColumn":201},{"ruleId":"221","severity":1,"message":"222","line":14,"column":13,"nodeType":"223","endLine":14,"endColumn":46},{"ruleId":"230","severity":1,"message":"231","line":26,"column":59,"nodeType":"232","messageId":"233","endLine":26,"endColumn":60},{"ruleId":"230","severity":1,"message":"231","line":38,"column":68,"nodeType":"232","messageId":"233","endLine":38,"endColumn":69},{"ruleId":"230","severity":1,"message":"231","line":20,"column":62,"nodeType":"232","messageId":"233","endLine":20,"endColumn":63},{"ruleId":"213","replacedBy":"253"},{"ruleId":"215","replacedBy":"254"},{"ruleId":"230","severity":1,"message":"231","line":161,"column":52,"nodeType":"232","messageId":"233","endLine":161,"endColumn":53},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'AdminLogin' is defined but never used.","'FresherRegister' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"257","text":"258"},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","'Component' is defined but never used.","'axios' is defined but never used.",{"range":"259","text":"258"},"'id' is assigned a value but never used.","'l2' is defined but never used.","'l3' is defined but never used.",{"range":"260","text":"261"},{"range":"262","text":"261"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["255"],["256"],"no-global-assign","no-unsafe-negation",[674,681],"\r\n    .",[1506,1513],[572,583],"\r\n        .",[519,530]]